log = console~log

map =
  27: \esc
  32: \space

Kb = (map) ->
  for str, cb in map
    for key of str / ' '
      Kb.map[key] = cb
  #XXX special keys (eg esc, backspace) don't emit `keypress`
  # `charCode` is 0 except in `keypress`
  # `keyCode` is not unicode
  window.addEventListener \keydown  Kb.keydown
  window.addEventListener \keypress Kb.keypress

Kb <<<<
  rm: ->
    window.removeEventListener \keydown  Kb.keydown
    window.removeEventListener \keypress Kb.keypress
  map: {}
  keydown:  -> Kb.key it, true
  keypress: -> Kb.key it, false
  key: (e, special) ->
    {which:code} = e
    seq = for <[ alt ctrl meta shift ]>
      & if e[& + \Key]
    if special
      key = map[code]
    else
      key = String.fromCharCode code
      if e.shiftKey
        seq.pop!
    seq.push key
    seq .= join \+

    if Kb.map[seq]
      e.preventDefault!
      that!

module.exports = Kb
